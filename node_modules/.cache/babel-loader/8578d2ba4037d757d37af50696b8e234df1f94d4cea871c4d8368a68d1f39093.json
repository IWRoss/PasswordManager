{"ast":null,"code":"var _jsxFileName = \"/Users/developer/Node/PasswordManager/src/contexts/FirestoreContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useMemo, useState } from \"react\";\n\n/**\n * Import Packages\n */\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getAuth, signInAnonymously, GoogleAuthProvider, signInWithPopup, onAuthStateChanged, setPersistence, browserLocalPersistence } from \"firebase/auth\";\nimport Loader from \"../components/Loader/Loader\";\n\n/**\n * Initialize our Firebase App\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst app = initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID\n});\n\n/**\n * Create Context for Provider\n */\nexport const FirestoreContext = /*#__PURE__*/createContext();\n\n/**\n * Hook for Firestore Context\n *\n * @returns Context\n */\nexport function useFirestore() {\n  _s();\n  return useContext(FirestoreContext);\n}\n\n/**\n *\n * @param {Object} props\n * @returns\n */\n_s(useFirestore, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const FirestoreProvider = ({\n  children\n}) => {\n  _s2();\n  const db = getFirestore(app);\n  const auth = getAuth();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n  const loginAnon = async () => {\n    // If user is logged in and not anonymous, return\n    if (auth.currentUser && !auth.currentUser.isAnonymous) {\n      return;\n    }\n    try {\n      const {\n        user\n      } = await signInAnonymously(auth);\n    } catch (error) {\n      console.log(\"Error logging in: \", error);\n    }\n  };\n  const loginWithGoogle = async () => {\n    try {\n      // Set persistence on auth\n      await setPersistence(auth, browserLocalPersistence);\n      const provider = new GoogleAuthProvider();\n      const {\n        user\n      } = await signInWithPopup(auth, provider);\n    } catch (error) {\n      console.log(\"Error logging in: \", error);\n    }\n  };\n  const logoutWithGoogle = async () => {\n    try {\n      await auth.signOut();\n    } catch (error) {\n      console.log(\"Error logging out: \", error);\n    }\n  };\n  const isAuthorised = useMemo(() => {\n    var _auth$currentUser;\n    if (!auth.currentUser) {\n      return false;\n    }\n\n    // Email contains @interactiveworkshops.com\n    return ((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email) && auth.currentUser.email.includes(\"@interactiveworkshops.com\");\n  }, [currentUser]);\n  const isAdmin = useMemo(() => {\n    const privilegedUsers = process.env.REACT_APP_PRIVILEGED_USERS.split(\",\");\n    return privilegedUsers.find(email => email === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.email));\n  }, [currentUser, isAuthorised]);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (!user) {\n        loginAnon();\n      }\n      if (user) {\n        setIsLoggedIn(true);\n      }\n      setCurrentUser(user);\n    });\n    return unsubscribe;\n  }, [auth]);\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      message: \"Connecting to database\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }, this);\n  }\n\n  /**\n   *\n   */\n  return /*#__PURE__*/_jsxDEV(FirestoreContext.Provider, {\n    value: {\n      db,\n      auth,\n      loginWithGoogle,\n      logoutWithGoogle,\n      isAuthorised,\n      isAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s2(FirestoreProvider, \"qdmM875lPJIWjaxZlZ4IIuPjUy8=\");\n_c = FirestoreProvider;\nvar _c;\n$RefreshReg$(_c, \"FirestoreProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useMemo","useState","initializeApp","getFirestore","getAuth","signInAnonymously","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","setPersistence","browserLocalPersistence","Loader","jsxDEV","_jsxDEV","app","apiKey","process","env","REACT_APP_FIREBASE_APIKEY","authDomain","REACT_APP_FIREBASE_AUTHDOMAIN","projectId","REACT_APP_FIREBASE_PROJECTID","storageBucket","REACT_APP_FIREBASE_STORAGEBUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGINGSENDERID","appId","REACT_APP_FIREBASE_APPID","FirestoreContext","useFirestore","_s","FirestoreProvider","children","_s2","db","auth","isLoggedIn","setIsLoggedIn","currentUser","setCurrentUser","loginAnon","isAnonymous","user","error","console","log","loginWithGoogle","provider","logoutWithGoogle","signOut","isAuthorised","_auth$currentUser","email","includes","isAdmin","privilegedUsers","REACT_APP_PRIVILEGED_USERS","split","find","unsubscribe","message","fileName","_jsxFileName","lineNumber","columnNumber","Provider","value","_c","$RefreshReg$"],"sources":["/Users/developer/Node/PasswordManager/src/contexts/FirestoreContext.js"],"sourcesContent":["import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\n\n/**\n * Import Packages\n */\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\nimport {\n  getAuth,\n  signInAnonymously,\n  GoogleAuthProvider,\n  signInWithPopup,\n  onAuthStateChanged,\n  setPersistence,\n  browserLocalPersistence,\n} from \"firebase/auth\";\n\nimport Loader from \"../components/Loader/Loader\";\n\n/**\n * Initialize our Firebase App\n */\nconst app = initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n});\n\n/**\n * Create Context for Provider\n */\nexport const FirestoreContext = createContext();\n\n/**\n * Hook for Firestore Context\n *\n * @returns Context\n */\nexport function useFirestore() {\n  return useContext(FirestoreContext);\n}\n\n/**\n *\n * @param {Object} props\n * @returns\n */\nexport const FirestoreProvider = ({ children }) => {\n  const db = getFirestore(app);\n\n  const auth = getAuth();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  const loginAnon = async () => {\n    // If user is logged in and not anonymous, return\n    if (auth.currentUser && !auth.currentUser.isAnonymous) {\n      return;\n    }\n\n    try {\n      const { user } = await signInAnonymously(auth);\n    } catch (error) {\n      console.log(\"Error logging in: \", error);\n    }\n  };\n\n  const loginWithGoogle = async () => {\n    try {\n      // Set persistence on auth\n      await setPersistence(auth, browserLocalPersistence);\n\n      const provider = new GoogleAuthProvider();\n\n      const { user } = await signInWithPopup(auth, provider);\n    } catch (error) {\n      console.log(\"Error logging in: \", error);\n    }\n  };\n\n  const logoutWithGoogle = async () => {\n    try {\n      await auth.signOut();\n    } catch (error) {\n      console.log(\"Error logging out: \", error);\n    }\n  };\n\n  const isAuthorised = useMemo(() => {\n    if (!auth.currentUser) {\n      return false;\n    }\n\n    // Email contains @interactiveworkshops.com\n    return (\n      auth.currentUser?.email &&\n      auth.currentUser.email.includes(\"@interactiveworkshops.com\")\n    );\n  }, [currentUser]);\n\n  const isAdmin = useMemo(() => {\n    const privilegedUsers = process.env.REACT_APP_PRIVILEGED_USERS.split(\",\");\n\n    return privilegedUsers.find((email) => email === currentUser?.email);\n  }, [currentUser, isAuthorised]);\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (!user) {\n        loginAnon();\n      }\n\n      if (user) {\n        setIsLoggedIn(true);\n      }\n\n      setCurrentUser(user);\n    });\n\n    return unsubscribe;\n  }, [auth]);\n\n  if (!isLoggedIn) {\n    return <Loader message=\"Connecting to databaseâ€¦\" />;\n  }\n\n  /**\n   *\n   */\n  return (\n    <FirestoreContext.Provider\n      value={{\n        db,\n        auth,\n        loginWithGoogle,\n        logoutWithGoogle,\n        isAuthorised,\n        isAdmin,\n      }}\n    >\n      {children}\n    </FirestoreContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}