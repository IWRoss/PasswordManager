{"ast":null,"code":"var _jsxFileName = \"/Users/ryanbudd/PasswordManager/src/contexts/MainMenuContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useContext, useState, createContext, useMemo } from \"react\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MainMenuContext = /*#__PURE__*/createContext();\nexport function useMainMenu() {\n  _s();\n  return useContext(MainMenuContext);\n}\n_s(useMainMenu, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const MainMenuProvider = ({\n  children\n}) => {\n  _s2();\n  //States here\n\n  //Internal Vars\n  const [userData, setUserData] = useState([]);\n  const [LowTierData, setLowTierData] = useState([]);\n  const [MidTierData, setMidTierData] = useState([]);\n  const [HighTierData, setHighTierData] = useState([]);\n\n  //Imported Vars\n  const {\n    employeeData,\n    loggedAccess,\n    setEmployeeDataByIndex,\n    userLoggedIn\n  } = useAuth();\n\n  //Functions here\n\n  const promoteEmployee = username => {\n    if (userLoggedIn) {\n      for (let i = 0; i < employeeData.length; i++) {\n        if (employeeData[i][0] == username) {\n          //is the entered username in the employee database?\n          switch (employeeData[i][2]) {\n            case \"High\":\n              setEmployeeDataByIndex(i, 2, \"Master\");\n              break;\n            case \"Medium\":\n              setEmployeeDataByIndex(i, 2, \"High\");\n              break;\n            case \"Low\":\n              setEmployeeDataByIndex(i, 2, \"Medium\");\n              break;\n            default:\n              setEmployeeDataByIndex(i, 2, \"Low\");\n              break;\n          }\n        }\n      }\n    }\n  };\n  const demoteEmployee = username => {\n    //Debug method - decrease access level\n    if (userLoggedIn) {\n      for (let i = 0; i < employeeData.length; i++) {\n        if (employeeData[i][0] == username) {\n          switch (employeeData[i][2]) {\n            case \"Master\":\n              setEmployeeDataByIndex(i, 2, \"High\");\n              break;\n            case \"High\":\n              setEmployeeDataByIndex(i, 2, \"Medium\");\n              break;\n            case \"Medium\":\n              setEmployeeDataByIndex(i, 2, \"Low\");\n              break;\n            default:\n              setEmployeeDataByIndex(i, 2, \"None\");\n              break;\n          }\n        }\n      }\n    }\n  };\n  const addLowLevelData = (username, password) => {\n    if (loggedAccess != \"None\") {\n      setLowTierData([...LowTierData, [username, password]]);\n    }\n  };\n  const addMidLevelData = (username, password) => {\n    if (loggedAccess != (\"None\" || \"Low\")) {\n      setMidTierData([...MidTierData, [username, password]]);\n    }\n  };\n  const addHighLevelData = (username, password) => {\n    if (loggedAccess == (\"High\" || \"Master\")) {\n      setHighTierData([...HighTierData, [username, password]]);\n    }\n  };\n  const removeLowLevelData = (username, password) => {\n    const index = LowTierData.indexOf([username, password]);\n    if (index !== -1) {\n      if (loggedAccess != \"None\") {\n        const newArr = [...LowTierData.slice(0, index), ...LowTierData.slice(index + 1)];\n        setLowTierData(newArr);\n      }\n    }\n  };\n  const removeMidLevelData = (username, password) => {\n    const index = MidTierData.indexOf([username, password]);\n    if (index !== -1) {\n      if (loggedAccess != (\"None\" || \"Low\")) {\n        const newArr = [...MidTierData.slice(0, index), ...MidTierData.slice(index + 1)];\n        setMidTierData(newArr);\n      }\n    }\n  };\n  const removeHighLevelData = (username, password) => {\n    const index = HighTierData.indexOf([username, password]);\n    if (index !== -1) {\n      if (loggedAccess == (\"High\" || \"Master\")) {\n        const newArr = [...HighTierData.slice(0, index), ...HighTierData.slice(index + 1)];\n        setHighTierData(newArr);\n      }\n    }\n  };\n  const accessLowLevelData = () => {\n    if (loggedAccess != \"None\") {\n      return LowTierData;\n    }\n  };\n  const accessMidLevelData = () => {\n    if (loggedAccess != (\"None\" || \"Low\")) {\n      return MidTierData;\n    }\n  };\n  const accessHighLevelData = () => {\n    if (loggedAccess == (\"High\" || \"Master\")) {\n      return HighTierData;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainMenuContext.Provider, {\n    value: {\n      userData,\n      setUserData,\n      LowTierData,\n      setLowTierData,\n      MidTierData,\n      setMidTierData,\n      HighTierData,\n      setHighTierData,\n      promoteEmployee,\n      demoteEmployee,\n      addLowLevelData,\n      addMidLevelData,\n      addHighLevelData,\n      removeLowLevelData,\n      removeMidLevelData,\n      removeHighLevelData,\n      accessLowLevelData,\n      accessMidLevelData,\n      accessHighLevelData\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s2(MainMenuProvider, \"Jox2+KHskd6VGEcuAUGQLBJ6beI=\", false, function () {\n  return [useAuth];\n});\n_c = MainMenuProvider;\nvar _c;\n$RefreshReg$(_c, \"MainMenuProvider\");","map":{"version":3,"names":["useContext","useState","createContext","useMemo","useAuth","jsxDEV","_jsxDEV","MainMenuContext","useMainMenu","_s","MainMenuProvider","children","_s2","userData","setUserData","LowTierData","setLowTierData","MidTierData","setMidTierData","HighTierData","setHighTierData","employeeData","loggedAccess","setEmployeeDataByIndex","userLoggedIn","promoteEmployee","username","i","length","demoteEmployee","addLowLevelData","password","addMidLevelData","addHighLevelData","removeLowLevelData","index","indexOf","newArr","slice","removeMidLevelData","removeHighLevelData","accessLowLevelData","accessMidLevelData","accessHighLevelData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ryanbudd/PasswordManager/src/contexts/MainMenuContext.js"],"sourcesContent":["import { useContext, useState, createContext, useMemo } from \"react\";\n\nimport { useAuth } from \"./AuthContext\";\n\nexport const MainMenuContext = createContext();\n\nexport function useMainMenu() {\n    return useContext(MainMenuContext);\n} \n\nexport const MainMenuProvider = ({children}) => {\n    //States here\n\n    //Internal Vars\n    const [userData, setUserData] = useState([]);\n    const [LowTierData, setLowTierData] = useState([]);\n    const [MidTierData, setMidTierData] = useState([]);\n    const [HighTierData, setHighTierData] = useState([]);\n\n    //Imported Vars\n    const {employeeData, loggedAccess, setEmployeeDataByIndex, userLoggedIn} = useAuth();\n    \n\n    //Functions here\n\n    const promoteEmployee = (username) => {\n        if (userLoggedIn) {\n            for (let i = 0; i < employeeData.length; i++) {\n                if (employeeData[i][0] == username) { \n                    //is the entered username in the employee database?\n                    switch(employeeData[i][2]){\n                        case \"High\":\n                            setEmployeeDataByIndex(i, 2, \"Master\");\n                            break;\n                        case \"Medium\":\n                            setEmployeeDataByIndex(i, 2, \"High\");\n                            break;\n                        case \"Low\":\n                            setEmployeeDataByIndex(i, 2, \"Medium\");\n                            break;\n                        default:\n                            setEmployeeDataByIndex(i, 2, \"Low\");\n                            break;\n                    }\n                }\n            }\n        }    \n    }\n\n    const demoteEmployee = (username) => {\n        //Debug method - decrease access level\n        if (userLoggedIn) {\n            for (let i = 0; i < employeeData.length; i++) {\n                if (employeeData[i][0] == username) {\n                    switch(employeeData[i][2]){\n                        case \"Master\":\n                            setEmployeeDataByIndex(i, 2, \"High\");\n                            break;\n                        case \"High\":\n                            setEmployeeDataByIndex(i, 2, \"Medium\");\n                            break;\n                        case \"Medium\":\n                            setEmployeeDataByIndex(i, 2, \"Low\");\n                            break;\n                        default:\n                            setEmployeeDataByIndex(i, 2, \"None\");\n                            break;\n                    }\n                }\n            }\n        }\n    }\n\n    const addLowLevelData = (username, password) => {\n        if (loggedAccess != \"None\") {\n            setLowTierData([\n                ...LowTierData,\n                [username, password]\n            ]);\n        }\n    }\n\n    const addMidLevelData = (username, password) => {\n        if (loggedAccess != (\"None\" || \"Low\")) {\n            setMidTierData([\n                ...MidTierData,\n                [username, password]\n            ]);\n        }\n    }\n\n    const addHighLevelData = (username, password) => {\n        if (loggedAccess == (\"High\" || \"Master\")) {\n            setHighTierData([\n                ...HighTierData,\n                [username, password]\n            ]);\n        }\n    }\n\n    const removeLowLevelData = (username, password) => {\n        const index = LowTierData.indexOf([username, password]);\n        if (index !== -1) {\n            if (loggedAccess != \"None\") {\n                const newArr = [...LowTierData.slice(0, index), ...LowTierData.slice(index+1)];\n                setLowTierData(newArr);\n            }\n        }\n    }\n\n    const removeMidLevelData = (username, password) => {\n        const index = MidTierData.indexOf([username, password]);\n        if (index !== -1) {\n            if (loggedAccess != (\"None\" || \"Low\")) {\n                const newArr = [...MidTierData.slice(0, index), ...MidTierData.slice(index+1)];\n                setMidTierData(newArr);\n            }\n        }\n    }\n\n    const removeHighLevelData = (username, password) => {\n        const index = HighTierData.indexOf([username, password]);\n        if (index !== -1) {\n            if (loggedAccess == (\"High\" || \"Master\")) {\n                const newArr = [...HighTierData.slice(0, index), ...HighTierData.slice(index+1)];\n                setHighTierData(newArr);\n            }\n        }\n    }\n    \n    const accessLowLevelData = () => {\n        if (loggedAccess != \"None\") {\n            return LowTierData;\n        }\n    }\n\n    const accessMidLevelData = () => {\n        if (loggedAccess != (\"None\" || \"Low\")) {\n            return MidTierData;\n        }\n    }\n\n    const accessHighLevelData = () => {\n        if (loggedAccess == (\"High\" || \"Master\")) {\n            return HighTierData;\n        }\n    }\n\n    return (\n        <MainMenuContext.Provider value={{\n            userData,\n            setUserData,\n            LowTierData,\n            setLowTierData,\n            MidTierData,\n            setMidTierData,\n            HighTierData,\n            setHighTierData,\n            promoteEmployee,\n            demoteEmployee,\n            addLowLevelData,\n            addMidLevelData,\n            addHighLevelData,\n            removeLowLevelData,\n            removeMidLevelData,\n            removeHighLevelData,\n            accessLowLevelData,\n            accessMidLevelData,\n            accessHighLevelData\n        }}>\n            {children}\n        </MainMenuContext.Provider>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}